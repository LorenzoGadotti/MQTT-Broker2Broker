#Blibliotecas

import random  #gerar ClientID aleatorio
import json    #receber o JSON do dispositivo 
from itsdangerous import json
import csv
from paho.mqtt import client as mqtt_client #funÃ§oes mqtt
from sqlalchemy import true



#Connecta como subscriber 
broker = 'mqtt.gholias.com'
port = 1883
topic = "meccatus"
# gera um client ID com prefixo pub aleatoriamente
client_id = f'python-mqtt-{random.randint(0, 100)}'
username = '105332'
password = 'X4VpusLy'


def connect_mqtt() -> mqtt_client:
    def on_connect(client, userdata, flags, rc):
        if rc == 0:
            print("Connected to MQTT Broker!")
        else:
            print("Failed to connect, return code %d\n", rc)

    client = mqtt_client.Client(client_id)
    client.username_pw_set(username, password)
    client.on_connect = on_connect
    client.connect(broker, port)
    return client


#coleta/print de dados
def subscribe(client: mqtt_client):
    def on_message(client, userdata, msg):
        mensagem = json.loads(msg.payload)           #pega o payload e tranforma em JSON no console
        if (mensagem[0]["bn"]=="F803320800028DC8"):  #filtra o ID do device desejado
            print (mensagem)    
        
    
    client.subscribe(topic)
    client.on_message = on_message


def run():
    client = connect_mqtt()
    subscribe(client)
    client.loop_forever()


if __name__ == '__main__':
    run()
    
