const mqtt = require("mqtt");
const clientId = `mqtt_${Math.random().toString(16).slice(3)}`;
let scope, client;
function connect_broker1() {
    client = mqtt.connect('mqtt://mqtt.broker1.com:1883', {
        clientId,
        clean: true,
        connectTimeout: 4000,
        username: 'nome1',
        password: 'senha1',
        reconnectPeriod: 1000,
    });
    client.on('connect', function () {
        client.subscribe("topico1");
        console.log("Conectado ao broker1 ");
    });
}
function connect_broker2() {
    client = mqtt.connect('mqtt://mqtt.broker2.io:1883', {
        clientId,
        clean: true,
        connectTimeout: 4000,
        username: 'nome2',
        password: 'senha2',
        reconnectPeriod: 1000,
    });
    console.log("Conectado ao broker2");
    /*
    client.on('connect', () => {
        console.log("Conectado ao broker2");
    });
    */
}
function send_froward(para_broker2) {
    client.publish("topico2", JSON.stringify(para_broker2), { qos: 1, retain: false }, (error) => {
        if (error) {
            console.error(erro);
        }
        console.log("Data enviada ao broker");
    });
}
function analise_dados(dados) {
    if (dados) {
        const filtro = dados.find(x => x.bn === "device");
        if (filtro) {
            console.log(dados);
            connect_tago();
            if (client.options.hostname === "mqtt.broker2.io") {
                send_froward(dados);
            }
        }
    }
}
function esperar_mensagem() {
    connect_broker1();
    client.on('message', function (topic, message) {
        try {
            scope = JSON.parse(message);
        } catch (err) {
            scope = [{ n: 'error', b: err }]
        }
        analise_dados(scope);
    });
}
esperar_mensagem();
